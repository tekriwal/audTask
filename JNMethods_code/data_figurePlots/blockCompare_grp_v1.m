function [] = blockCompare_grp_v1(groupList)
% BLOCKCOMPARE_GRP_V1 generates a sensory discrimiation plot modeled on the
% logisitic regression which wil provide an assessment of an individual's
% performance on the auditory task
%
%
% The function will require the input_matrix used to generate the session
% in addition to the output struct.
%
% INPUTS:
% 'groupList' - cell arrar of the list of file names used for the 
% output .mat file generated by the paradigm code. 
% Example: {'JD_Oct20.mat','XT_Oct21.mat','AB_Oct22.mat'}
%
% Example usage: blockCompare_grp_v1({'f1.mat','f2.mat','f3.mat','f4.mat'})


load('input_matrix_rndm_matonly.mat', 'input_matrix_rndm')


%% Group plot

if ~isempty(groupList)
    
    meanDatSI = zeros(1,length(groupList));
    meanDatIG = zeros(1,length(groupList));
    for gi = 1:length(groupList)
        
        tName = groupList{gi};
        load(tName , 'rData')
        
        analysismatrix = zeros(144,10);
        analysismatrix(:,1) = input_matrix_rndm; %1st column is trial type
        corT = transpose([rData.Response] == [rData.actual]);
        analysismatrix(:,2) = corT;
        analysismatrix(:,3) = transpose([rData.rtime]);
        % Z score = (value - mean/SD)
        
        blocklength = 9;
        numbblocks = 16;
        
        matrixoutput = reshape(analysismatrix(:,3),blocklength,numbblocks);
        meanperblock = mean(matrixoutput); %now you have the average rxn time for each block
        %
        odds_meanperblock = meanperblock(1:2:16);
        evens_meanperblock = meanperblock(2:2:16);
        
        meanDatSI(gi) = mean(odds_meanperblock);
        meanDatIG(gi) = mean(evens_meanperblock);
        
    end

    boxplot([meanDatSI',meanDatIG'])
    ylim([0 max([meanDatSI';meanDatIG'])])
    xticklabels({'SG','IG'})
    
    xlabel('Mean reaction time (seconds)')
    

end



