%started 2/16/20, sandbox for io related work
%%
%%
for i = 1:13
    behavior_V2(i)
end
%%
%%
%%
%%


%AT below is new as of 7/19/20

SNrsubtype1 = 'clu'; %contributes to title of plots
subName1 = 'SG';
subName2 = 'IS';
meanORmedian = 'intraTrialFR_mean';

spaghett_io_helperfx_V1(SNrsubtype1, subName1, subName2, meanORmedian, groupvar, masterspikestruct_V2)




%AT below is new as of 7/19/20

SNrsubtype1 = 'All neurons'; %contributes to title of plots
subName1 = 'ipsi';
subName2 = 'contra';
meanORmedian = 'intraTrialFR_mean';

spaghett_io_helperfx_V1(SNrsubtype1, subName1, subName2, meanORmedian, groupvar, masterspikestruct_V2)




%AT below is new as of 7/19/20

SNrsubtype1 = 'All neurons'; %contributes to title of plots
subName1 = 'Corrects';
subName2 = 'Incorrects';
meanORmedian = 'intraTrialFR_mean';

spaghett_io_helperfx_V1(SNrsubtype1, subName1, subName2, meanORmedian, groupvar, masterspikestruct_V2)



%% AT adding below for spaghetti of the above

  
  


%ALL neurons, not indexing for GABA/DA
subplotting = 1;
kWidth = .5;
figure()
if subplotting == 1
    subplot(1, 5, 1)
else
    figure()
end
subplot(1, 5, 1)
subName1 = 'ipsi';
epochName1 = 'priors';
SNrsubtype1 = 'All neurons';
subName2 = 'contra';
epochName2 = epochName1;

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
% baselineFR1  = 0;
% baselineFR2  = 0;

meanORmedian = 'Mean_ave';

input1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
inputinfo1 = (input1/baselineFR1)*100;

input2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
inputinfo2 = (input2/baselineFR2)*100;

szz = 250;

input1 = inputinfo1;
input2 = inputinfo2;
xTickLabels = {'ipsi', 'contra'};
% xTickLabels = ([epochName1; epochName2]);
yLabel = 'Change in Firing rate (Hz)';
[pvalue,paraORnonpara] = stats_subfx2tailed(input1,input2, 'paired');

[pvalueinfo1,outcomeinfo1,paraORnonparainfo1] = stats_subfx_compToZero(input1);
[pvalueinfo2,outcomeinfo2,paraORnonparainfo2] = stats_subfx_compToZero(input2);


%stats
hx_sg = lillietest(input1); %1 means nonpara, 0 means normally distrib
hx_is = lillietest(input2);

[p_ttest_nonparaunpaired, h_ttest_nonparaunpaired] = ranksum(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[p_ttest_nonparapaired, h_ttest_nonparapaired] = signrank(input1, input2) ; %PAIRED

[p_ttest_unpaired, h_ttest_unpaired] = ttest2(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[h_ttest_paired, p_ttest_paired] = ttest(input1, input2) ; %PAIRED, normal distributions
%

xmin = -0.1;
xmax = 0.1;
n = length(input1);
x1 = xmin+rand(1,n)*(xmax-xmin);
x1 = 0;

xaxis_onPairedSG = 1:(length(input1));
xaxis_onPairedSG(:) = .75;
xaxis_onPairedSG = xaxis_onPairedSG + x1;

xaxis_onPairedIS = 1:(length(input2));
xaxis_onPairedIS(:) = 1.25;
xaxis_onPairedIS = xaxis_onPairedIS + x1;

scatter(xaxis_onPairedSG(:),input1(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)
hold on
scatter(xaxis_onPairedIS(:),input2(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on
for j = 1:length(input2)
    plot1 = plot([xaxis_onPairedSG(j) xaxis_onPairedIS(j)], [input1(j)' input2(j)'], 'Color', [.5 .5 .5], 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end

hold on
scatter(.75, median(input1), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)
hold on

scatter(1.25, median(input2), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)

hold on
plot([.75 1.25], [median(input1)  median(input2)], 'Color', 'k', 'LineWidth', 3);


% set(gca, 'YTick', [-1 -0.5 0 0.5 1]);
set(gca, 'XTick', [.75 1.25]);

xticklabels(xTickLabels);
ylabel(yLabel); %, 'FontSize', 14);

set(gca, 'FontSize', 10, 'FontName', 'Georgia')

if hx_sg == 0 && hx_is == 0
    str = strcat({'2td p = '}, num2str(p_ttest_paired));
else
    str = strcat({'2td p = '}, num2str(p_ttest_nonparapaired));
end
title(strcat('GABA,',str));
titletext = strcat(SNrsubtype1, {' '}, epochName1,{' - '}, epochName, {' '}, str);
title(titletext)

ylim([-20 20])
xlim([ 0.6 1.4])








if subplotting == 1
    subplot(1, 5, 2)
else
    figure()
end
subName1 = 'ipsi';
epochName1 = 'sensoryProcessing';
SNrsubtype1 = 'All neurons';
subName2 = 'contra';
epochName2 = epochName1;

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
% baselineFR1  = 0;
% baselineFR2  = 0;

meanORmedian = 'Mean_ave';

input1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
inputinfo1 = (input1/baselineFR1)*100;

input2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
inputinfo2 = (input2/baselineFR2)*100;

szz = 250;

input1 = inputinfo1;
input2 = inputinfo2;
xTickLabels = {'ipsi', 'contra'};
% xTickLabels = ([epochName1; epochName2]);
yLabel = 'Change in Firing rate (Hz)';
[pvalue,paraORnonpara] = stats_subfx2tailed(input1,input2, 'paired');

[pvalueinfo1,outcomeinfo1,paraORnonparainfo1] = stats_subfx_compToZero(input1);
[pvalueinfo2,outcomeinfo2,paraORnonparainfo2] = stats_subfx_compToZero(input2);


%stats
hx_sg = lillietest(input1); %1 means nonpara, 0 means normally distrib
hx_is = lillietest(input2);

[p_ttest_nonparaunpaired, h_ttest_nonparaunpaired] = ranksum(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[p_ttest_nonparapaired, h_ttest_nonparapaired] = signrank(input1, input2) ; %PAIRED

[p_ttest_unpaired, h_ttest_unpaired] = ttest2(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[h_ttest_paired, p_ttest_paired] = ttest(input1, input2) ; %PAIRED, normal distributions
%

xmin = -0.1;
xmax = 0.1;
n = length(input1);
x1 = xmin+rand(1,n)*(xmax-xmin);
x1 = 0;

xaxis_onPairedSG = 1:(length(input1));
xaxis_onPairedSG(:) = .75;
xaxis_onPairedSG = xaxis_onPairedSG + x1;

xaxis_onPairedIS = 1:(length(input2));
xaxis_onPairedIS(:) = 1.25;
xaxis_onPairedIS = xaxis_onPairedIS + x1;

scatter(xaxis_onPairedSG(:),input1(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)
hold on
scatter(xaxis_onPairedIS(:),input2(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on
for j = 1:length(input2)
    plot1 = plot([xaxis_onPairedSG(j) xaxis_onPairedIS(j)], [input1(j)' input2(j)'], 'Color', [.5 .5 .5], 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end

hold on
scatter(.75, median(input1), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)
hold on

scatter(1.25, median(input2), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)

hold on
plot([.75 1.25], [median(input1)  median(input2)], 'Color', 'k', 'LineWidth', 3);


% set(gca, 'YTick', [-1 -0.5 0 0.5 1]);
set(gca, 'XTick', [.75 1.25]);

xticklabels(xTickLabels);
ylabel(yLabel); %, 'FontSize', 14);

set(gca, 'FontSize', 10, 'FontName', 'Georgia')

if hx_sg == 0 && hx_is == 0
    str = strcat({'2td p = '}, num2str(p_ttest_paired));
else
    str = strcat({'2td p = '}, num2str(p_ttest_nonparapaired));
end
title(strcat('GABA,',str));
titletext = strcat(SNrsubtype1, {' '}, epochName1,{' - '}, epochName, {' '}, str);
title(titletext)


ylim([-20 20])
xlim([ 0.6 1.4])








if subplotting == 1
    subplot(1, 5, 3)
else
    figure()
end
subName1 = 'ipsi';
epochName1 = 'movePrep';
SNrsubtype1 = 'All neurons';
subName2 = 'contra';
epochName2 = epochName1;

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
% baselineFR1  = 0;
% baselineFR2  = 0;

meanORmedian = 'Mean_ave';

input1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
inputinfo1 = (input1/baselineFR1)*100;

input2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
inputinfo2 = (input2/baselineFR2);

szz = 250;

input1 = inputinfo1;
input2 = inputinfo2;
xTickLabels = {'ipsi', 'contra'};
% xTickLabels = ([epochName1; epochName2]);
yLabel = 'Change in Firing rate (Hz)';
[pvalue,paraORnonpara] = stats_subfx2tailed(input1,input2, 'paired');

[pvalueinfo1,outcomeinfo1,paraORnonparainfo1] = stats_subfx_compToZero(input1);
[pvalueinfo2,outcomeinfo2,paraORnonparainfo2] = stats_subfx_compToZero(input2);


%stats
hx_sg = lillietest(input1); %1 means nonpara, 0 means normally distrib
hx_is = lillietest(input2);

[p_ttest_nonparaunpaired, h_ttest_nonparaunpaired] = ranksum(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[p_ttest_nonparapaired, h_ttest_nonparapaired] = signrank(input1, input2) ; %PAIRED

[p_ttest_unpaired, h_ttest_unpaired] = ttest2(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[h_ttest_paired, p_ttest_paired] = ttest(input1, input2) ; %PAIRED, normal distributions
%

xmin = -0.1;
xmax = 0.1;
n = length(input1);
x1 = xmin+rand(1,n)*(xmax-xmin);
x1 = 0;

xaxis_onPairedSG = 1:(length(input1));
xaxis_onPairedSG(:) = .75;
xaxis_onPairedSG = xaxis_onPairedSG + x1;

xaxis_onPairedIS = 1:(length(input2));
xaxis_onPairedIS(:) = 1.25;
xaxis_onPairedIS = xaxis_onPairedIS + x1;

scatter(xaxis_onPairedSG(:),input1(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)
hold on
scatter(xaxis_onPairedIS(:),input2(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on
for j = 1:length(input2)
    plot1 = plot([xaxis_onPairedSG(j) xaxis_onPairedIS(j)], [input1(j)' input2(j)'], 'Color', [.5 .5 .5], 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end

hold on
scatter(.75, median(input1), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)
hold on

scatter(1.25, median(input2), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)

hold on
plot([.75 1.25], [median(input1)  median(input2)], 'Color', 'k', 'LineWidth', 3);


% set(gca, 'YTick', [-1 -0.5 0 0.5 1]);
set(gca, 'XTick', [.75 1.25]);

xticklabels(xTickLabels);
ylabel(yLabel); %, 'FontSize', 14);

set(gca, 'FontSize', 10, 'FontName', 'Georgia')

if hx_sg == 0 && hx_is == 0
    str = strcat({'2td p = '}, num2str(p_ttest_paired));
else
    str = strcat({'2td p = '}, num2str(p_ttest_nonparapaired));
end
title(strcat('GABA,',str));
titletext = strcat(SNrsubtype1, {' '}, epochName1,{' - '}, epochName, {' '}, str);
title(titletext)


ylim([-20 20])
xlim([ 0.6 1.4])












if subplotting == 1
    subplot(1, 5, 4)
else
    figure()
end
subName1 = 'ipsi';
epochName1 = 'moveInit';
SNrsubtype1 = 'All neurons';
subName2 = 'contra';
epochName2 = epochName1;

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
% baselineFR1  = 0;
% baselineFR2  = 0;

meanORmedian = 'Mean_ave';

input1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
inputinfo1 = (input1/baselineFR1)*100;

input2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
inputinfo2 = (input2/baselineFR2)*100;

szz = 250;

input1 = inputinfo1;
input2 = inputinfo2;
xTickLabels = {'ipsi', 'contra'};
% xTickLabels = ([epochName1; epochName2]);
yLabel = 'Change in Firing rate (Hz)';
[pvalue,paraORnonpara] = stats_subfx2tailed(input1,input2, 'paired');

[pvalueinfo1,outcomeinfo1,paraORnonparainfo1] = stats_subfx_compToZero(input1);
[pvalueinfo2,outcomeinfo2,paraORnonparainfo2] = stats_subfx_compToZero(input2);


%stats
hx_sg = lillietest(input1); %1 means nonpara, 0 means normally distrib
hx_is = lillietest(input2);

[p_ttest_nonparaunpaired, h_ttest_nonparaunpaired] = ranksum(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[p_ttest_nonparapaired, h_ttest_nonparapaired] = signrank(input1, input2) ; %PAIRED

[p_ttest_unpaired, h_ttest_unpaired] = ttest2(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[h_ttest_paired, p_ttest_paired] = ttest(input1, input2) ; %PAIRED, normal distributions
%

xmin = -0.1;
xmax = 0.1;
n = length(input1);
x1 = xmin+rand(1,n)*(xmax-xmin);
x1 = 0;

xaxis_onPairedSG = 1:(length(input1));
xaxis_onPairedSG(:) = .75;
xaxis_onPairedSG = xaxis_onPairedSG + x1;

xaxis_onPairedIS = 1:(length(input2));
xaxis_onPairedIS(:) = 1.25;
xaxis_onPairedIS = xaxis_onPairedIS + x1;

scatter(xaxis_onPairedSG(:),input1(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)
hold on
scatter(xaxis_onPairedIS(:),input2(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on
for j = 1:length(input2)
    plot1 = plot([xaxis_onPairedSG(j) xaxis_onPairedIS(j)], [input1(j)' input2(j)'], 'Color', [.5 .5 .5], 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end

hold on
scatter(.75, median(input1), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)
hold on

scatter(1.25, median(input2), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)

hold on
plot([.75 1.25], [median(input1)  median(input2)], 'Color', 'k', 'LineWidth', 3);


% set(gca, 'YTick', [-1 -0.5 0 0.5 1]);
set(gca, 'XTick', [.75 1.25]);

xticklabels(xTickLabels);
ylabel(yLabel); %, 'FontSize', 14);

set(gca, 'FontSize', 10, 'FontName', 'Georgia')

if hx_sg == 0 && hx_is == 0
    str = strcat({'2td p = '}, num2str(p_ttest_paired));
else
    str = strcat({'2td p = '}, num2str(p_ttest_nonparapaired));
end
title(strcat('GABA,',str));
titletext = strcat(SNrsubtype1, {' '}, epochName1,{' - '}, epochName, {' '}, str);
title(titletext)


ylim([-20 20])
xlim([ 0.6 1.4])









if subplotting == 1
    subplot(1, 5, 5)
else
    figure()
end
subName1 = 'ipsi';
epochName1 = 'periReward';
SNrsubtype1 = 'All neurons';
subName2 = 'contra';
epochName2 = epochName1;

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
% baselineFR1  = 0;
% baselineFR2  = 0;

meanORmedian = 'Mean_ave';

input1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
inputinfo1 = (input1/baselineFR1)*100;

input2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
inputinfo2 = (input2/baselineFR2)*100;

szz = 250;

input1 = inputinfo1;
input2 = inputinfo2;
xTickLabels = {'ipsi', 'contra'};
% xTickLabels = ([epochName1; epochName2]);
yLabel = 'Change in Firing rate (Hz)';
[pvalue,paraORnonpara] = stats_subfx2tailed(input1,input2, 'paired');

[pvalueinfo1,outcomeinfo1,paraORnonparainfo1] = stats_subfx_compToZero(input1);
[pvalueinfo2,outcomeinfo2,paraORnonparainfo2] = stats_subfx_compToZero(input2);


%stats
hx_sg = lillietest(input1); %1 means nonpara, 0 means normally distrib
hx_is = lillietest(input2);

[p_ttest_nonparaunpaired, h_ttest_nonparaunpaired] = ranksum(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[p_ttest_nonparapaired, h_ttest_nonparapaired] = signrank(input1, input2) ; %PAIRED

[p_ttest_unpaired, h_ttest_unpaired] = ttest2(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[h_ttest_paired, p_ttest_paired] = ttest(input1, input2) ; %PAIRED, normal distributions
%

xmin = -0.1;
xmax = 0.1;
n = length(input1);
x1 = xmin+rand(1,n)*(xmax-xmin);
x1 = 0;

xaxis_onPairedSG = 1:(length(input1));
xaxis_onPairedSG(:) = .75;
xaxis_onPairedSG = xaxis_onPairedSG + x1;

xaxis_onPairedIS = 1:(length(input2));
xaxis_onPairedIS(:) = 1.25;
xaxis_onPairedIS = xaxis_onPairedIS + x1;

scatter(xaxis_onPairedSG(:),input1(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)
hold on
scatter(xaxis_onPairedIS(:),input2(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on
for j = 1:length(input2)
    plot1 = plot([xaxis_onPairedSG(j) xaxis_onPairedIS(j)], [input1(j)' input2(j)'], 'Color', [.5 .5 .5], 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end

hold on
scatter(.75, median(input1), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)
hold on

scatter(1.25, median(input2), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)

hold on
plot([.75 1.25], [median(input1)  median(input2)], 'Color', 'k', 'LineWidth', 3);


% set(gca, 'YTick', [-1 -0.5 0 0.5 1]);
set(gca, 'XTick', [.75 1.25]);

xticklabels(xTickLabels);
ylabel(yLabel); %, 'FontSize', 14);

set(gca, 'FontSize', 10, 'FontName', 'Georgia')

if hx_sg == 0 && hx_is == 0
    str = strcat({'2td p = '}, num2str(p_ttest_paired));
else
    str = strcat({'2td p = '}, num2str(p_ttest_nonparapaired));
end
title(strcat('GABA,',str));
titletext = strcat(SNrsubtype1, {' '}, epochName1,{' - '}, epochName, {' '}, str);
title(titletext)


ylim([-20 20])
xlim([ 0.6 1.4])





%%

%idea
%plot ave FR for each epoch


subName1 = 'SG';
epochName1 = 'priors';
SNrsubtype1 = 'All neurons';
subName2 = 'contra';
epochName2 = epochName1;

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
% baselineFR1  = 0;
% baselineFR2  = 0;

meanORmedian = 'Mean_ave';

input1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
SGpriors = input1 - baselineFR1;

input2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
ISpriors = input2 - baselineFR2;







subName1 = 'SG';
epochName1 = 'sensoryProcessing';
SNrsubtype1 = 'All neurons';
subName2 = 'IS';
epochName2 = epochName1;

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
% baselineFR1  = 0;
% baselineFR2  = 0;

meanORmedian = 'Mean_ave';

input1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
SGsensoryProcessing = input1 - baselineFR1;

input2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
ISsensoryProcessing = input2 - baselineFR2;






subName1 = 'SG';
epochName1 = 'movePrep';
SNrsubtype1 = 'All neurons';
subName2 = 'IS';
epochName2 = epochName1;

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
% baselineFR1  = 0;
% baselineFR2  = 0;

meanORmedian = 'Mean_ave';

input1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
SGmovePrep = input1 - baselineFR1;

input2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
ISmovePrep = input2 - baselineFR2;






subName1 = 'SG';
epochName1 = 'moveInit';
SNrsubtype1 = 'All neurons';
subName2 = 'IS';
epochName2 = epochName1;

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
% baselineFR1  = 0;
% baselineFR2  = 0;

meanORmedian = 'Mean_ave';

input1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
SGmoveInit = input1 - baselineFR1;

input2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
ISmoveInit = input2 - baselineFR2;







subName1 = 'SG';
epochName1 = 'periReward';
SNrsubtype1 = 'All neurons';
subName2 = 'IS';
epochName2 = epochName1;

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
% baselineFR1  = 0;
% baselineFR2  = 0;

meanORmedian = 'Mean_ave';

input1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
SGperiReward = input1 - baselineFR1;

input2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
ISperiReward = input2 - baselineFR2;





%so now we should have 5 pts for each neuron
szz = 250;

figure()
subplot(2,1,1)


input1 = SGpriors;
inputnext = SGsensoryProcessing;
x1pos = 1;

xaxis_onPaired = 1:(length(input1));
xaxis_onPaired(:) = x1pos;
xaxis_onPaired = xaxis_onPaired;

scatter(xaxis_onPaired(:),input1(:), szz,  'r', 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on

for j = 1:length(input1)
    plot1 = plot([xaxis_onPaired(j) (xaxis_onPaired(j)+1)], [input1(j)' inputnext(j)'], 'Color', 'r', 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end



input1 = SGsensoryProcessing;
inputnext = SGmovePrep;
x1pos = 2;

xaxis_onPaired = 1:(length(input1));
xaxis_onPaired(:) = x1pos;
xaxis_onPaired = xaxis_onPaired;

scatter(xaxis_onPaired(:),input1(:), szz,  'r', 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on

for j = 1:length(input1)
    plot1 = plot([xaxis_onPaired(j) (xaxis_onPaired(j)+1)], [input1(j)' inputnext(j)'], 'Color', 'r', 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end




input1 = SGsensoryProcessing;
inputnext = SGmovePrep;
x1pos = 3;

xaxis_onPaired = 1:(length(input1));
xaxis_onPaired(:) = x1pos;
xaxis_onPaired = xaxis_onPaired;

scatter(xaxis_onPaired(:),input1(:), szz,  'r', 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on

for j = 1:length(input1)
    plot1 = plot([xaxis_onPaired(j) (xaxis_onPaired(j)+1)], [input1(j)' inputnext(j)'], 'Color', 'r', 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end




input1 = SGmovePrep;
inputnext = SGmoveInit;
x1pos = 4;

xaxis_onPaired = 1:(length(input1));
xaxis_onPaired(:) = x1pos;
xaxis_onPaired = xaxis_onPaired;

scatter(xaxis_onPaired(:),input1(:), szz,  'r', 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on

for j = 1:length(input1)
    plot1 = plot([xaxis_onPaired(j) (xaxis_onPaired(j)+1)], [input1(j)' inputnext(j)'], 'Color', 'r', 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end





input1 = SGmoveInit;
inputnext = SGperiReward;
x1pos = 5;

xaxis_onPaired = 1:(length(input1));
xaxis_onPaired(:) = x1pos;
xaxis_onPaired = xaxis_onPaired;

scatter(xaxis_onPaired(:),input1(:), szz,  'r', 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on

for j = 1:length(input1)
    plot1 = plot([xaxis_onPaired(j) (xaxis_onPaired(j)+1)], [input1(j)' inputnext(j)'], 'Color', 'r', 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end





input1 = SGperiReward;
x1pos = 1;

xaxis_onPaired = 1:(length(input1));
xaxis_onPaired(:) = x1pos;
xaxis_onPaired = xaxis_onPaired;

scatter(xaxis_onPaired(:),input1(:), szz,  'r', 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)







subplot(2,1,2)


input1 = ISpriors;
inputnext = ISsensoryProcessing;
x1pos = 1;

xaxis_onPaired = 1:(length(input1));
xaxis_onPaired(:) = x1pos;
xaxis_onPaired = xaxis_onPaired;

scatter(xaxis_onPaired(:),input1(:), szz,  'r', 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on

for j = 1:length(input1)
    plot1 = plot([xaxis_onPaired(j) (xaxis_onPaired(j)+1)], [input1(j)' inputnext(j)'], 'Color', 'r', 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end



input1 = ISsensoryProcessing;
inputnext = ISmovePrep;
x1pos = 2;

xaxis_onPaired = 1:(length(input1));
xaxis_onPaired(:) = x1pos;
xaxis_onPaired = xaxis_onPaired;

scatter(xaxis_onPaired(:),input1(:), szz,  'r', 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on

for j = 1:length(input1)
    plot1 = plot([xaxis_onPaired(j) (xaxis_onPaired(j)+1)], [input1(j)' inputnext(j)'], 'Color', 'r', 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end




input1 = ISsensoryProcessing;
inputnext = ISmovePrep;
x1pos = 3;

xaxis_onPaired = 1:(length(input1));
xaxis_onPaired(:) = x1pos;
xaxis_onPaired = xaxis_onPaired;

scatter(xaxis_onPaired(:),input1(:), szz,  'r', 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on

for j = 1:length(input1)
    plot1 = plot([xaxis_onPaired(j) (xaxis_onPaired(j)+1)], [input1(j)' inputnext(j)'], 'Color', 'r', 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end




input1 = ISmovePrep;
inputnext = ISmoveInit;
x1pos = 4;

xaxis_onPaired = 1:(length(input1));
xaxis_onPaired(:) = x1pos;
xaxis_onPaired = xaxis_onPaired;

scatter(xaxis_onPaired(:),input1(:), szz,  'r', 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on

for j = 1:length(input1)
    plot1 = plot([xaxis_onPaired(j) (xaxis_onPaired(j)+1)], [input1(j)' inputnext(j)'], 'Color', 'r', 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end





input1 = ISmoveInit;
inputnext = ISperiReward;
x1pos = 5;

xaxis_onPaired = 1:(length(input1));
xaxis_onPaired(:) = x1pos;
xaxis_onPaired = xaxis_onPaired;

scatter(xaxis_onPaired(:),input1(:), szz,  'r', 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on

for j = 1:length(input1)
    plot1 = plot([xaxis_onPaired(j) (xaxis_onPaired(j)+1)], [input1(j)' inputnext(j)'], 'Color', 'r', 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end





input1 = ISperiReward;
x1pos = 1;

xaxis_onPaired = 1:(length(input1));
xaxis_onPaired(:) = x1pos;
xaxis_onPaired = xaxis_onPaired;

scatter(xaxis_onPaired(:),input1(:), szz,  'r', 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)



%%
%%
%AT 7/17/20











input1 = SGpriors;
input2 = ISpriors;
x1pos = 1;
x2pos = 2;
xaxis_onPairedSG = 1:(length(input1));
xaxis_onPairedSG(:) = x1pos;
xaxis_onPairedSG = xaxis_onPairedSG + x1;

xaxis_onPairedIS = 1:(length(input2));
xaxis_onPairedIS(:) = x2pos;
xaxis_onPairedIS = xaxis_onPairedIS + x1;

scatter(xaxis_onPairedSG(:),input1(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)
hold on
scatter(xaxis_onPairedIS(:),input2(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on
for j = 1:length(input2)
    plot1 = plot([xaxis_onPairedSG(j) xaxis_onPairedIS(j)], [input1(j)' input2(j)'], 'Color', [.5 .5 .5], 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end

hold on
scatter(x1pos, median(input1), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)
hold on

scatter(x2pos, median(input2), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)

hold on


input1 = SGsensoryProcessing;
input2 = ISsensoryProcessing;
x1pos = 2;
x2pos = 3;
xaxis_onPairedSG = 1:(length(input1));
xaxis_onPairedSG(:) = x1pos;
xaxis_onPairedSG = xaxis_onPairedSG + x1;

xaxis_onPairedIS = 1:(length(input2));
xaxis_onPairedIS(:) = x2pos;
xaxis_onPairedIS = xaxis_onPairedIS + x1;

scatter(xaxis_onPairedSG(:),input1(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)
hold on
scatter(xaxis_onPairedIS(:),input2(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on
for j = 1:length(input2)
    plot1 = plot([xaxis_onPairedSG(j) xaxis_onPairedIS(j)], [input1(j)' input2(j)'], 'Color', [.5 .5 .5], 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end

hold on
scatter(x1pos, median(input1), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)
hold on

scatter(x2pos, median(input2), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)

hold on



%%

%ALL neurons, not indexing for GABA/DA
subplotting = 1;
kWidth = .5;
figure()
if subplotting == 1
    subplot(1, 5, 1)
else
    figure()
end
subplot(1, 5, 1)
subName1 = 'SG';
epochName1 = 'priors';
SNrsubtype1 = 'All neurons';
subName2 = 'IS';
epochName2 = epochName1;

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
% baselineFR1  = 0;
% baselineFR2  = 0;

meanORmedian = 'Mean_ave';

input1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
inputinfo1 = input1 - baselineFR1;

input2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
inputinfo2 = input2 - baselineFR2;

szz = 250;

input1 = inputinfo1;
input2 = inputinfo2;
xTickLabels = {'ipsi', 'contra'}; 
% xTickLabels = ([epochName1; epochName2]);
yLabel = 'Firing rate (Hz)';
[pvalue,paraORnonpara] = stats_subfx2tailed(input1,input2, 'paired');

[pvalueinfo1,outcomeinfo1,paraORnonparainfo1] = stats_subfx_compToZero(input1);
[pvalueinfo2,outcomeinfo2,paraORnonparainfo2] = stats_subfx_compToZero(input1);


%stats
hx_sg = lillietest(input1); %1 means nonpara, 0 means normally distrib
hx_is = lillietest(input2);

[p_ttest_nonparaunpaired, h_ttest_nonparaunpaired] = ranksum(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[p_ttest_nonparapaired, h_ttest_nonparapaired] = signrank(input1, input2) ; %PAIRED

[p_ttest_unpaired, h_ttest_unpaired] = ttest2(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[h_ttest_paired, p_ttest_paired] = ttest(input1, input2) ; %PAIRED, normal distributions
%

xmin = -0.1;
xmax = 0.1;
n = length(input1);
x1 = xmin+rand(1,n)*(xmax-xmin);
x1 = 0;

xaxis_onPairedSG = 1:(length(input1));
xaxis_onPairedSG(:) = 1;
xaxis_onPairedSG = xaxis_onPairedSG + x1;

xaxis_onPairedIS = 1:(length(input2));
xaxis_onPairedIS(:) = 1.4;
xaxis_onPairedIS = xaxis_onPairedIS + x1;

scatter(xaxis_onPairedSG(:),input1(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)
hold on
scatter(xaxis_onPairedIS(:),input2(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on
for j = 1:length(input2)
    plot1 = plot([xaxis_onPairedSG(j) xaxis_onPairedIS(j)], [input1(j)' input2(j)'], 'Color', [.5 .5 .5], 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end

hold on
scatter(1, median(input1), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)
hold on

scatter(1.4, median(input2), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)

hold on
plot([1 1.4], [median(input1)  median(input2)], 'Color', 'k', 'LineWidth', 3);


% set(gca, 'YTick', [-1 -0.5 0 0.5 1]);
set(gca, 'XTick', [1 1.4]);

xticklabels(xTickLabels);
ylabel(yLabel); %, 'FontSize', 14);

set(gca, 'FontSize', 10, 'FontName', 'Georgia')

if hx_sg == 0 && hx_is == 0
    str = strcat({' 2tailed p = '}, num2str(p_ttest_paired));
else
    str = strcat({' 2tailed p = '}, num2str(p_ttest_nonparapaired));
end
title(strcat('GABA,',str));
titletext = strcat(SNrsubtype1, {' '}, subName1,{'; '}, epochName1, {'   vs  '}, epochName2, str);
title(titletext)

% ylim([-20 120]);
xlim([.85 1.2]);








if subplotting == 1
    subplot(1, 5, 2)
else
    figure()
end
subName1 = 'SG';
epochName1 = 'sensoryProcessing';
SNrsubtype1 = 'All neurons';
subName2 = 'IS';
epochName2 = epochName1;

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
% baselineFR1  = 0;
% baselineFR2  = 0;

meanORmedian = 'Mean_ave';

input1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
inputinfo1 = input1 - baselineFR1;

input2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
inputinfo2 = input2 - baselineFR2;

szz = 250;

input1 = inputinfo1;
input2 = inputinfo2;
xTickLabels = {'ipsi', 'contra'}; 
% xTickLabels = ([epochName1; epochName2]);
yLabel = 'Firing rate (Hz)';
[pvalue,paraORnonpara] = stats_subfx2tailed(input1,input2, 'paired');

[pvalueinfo1,outcomeinfo1,paraORnonparainfo1] = stats_subfx_compToZero(input1);
[pvalueinfo2,outcomeinfo2,paraORnonparainfo2] = stats_subfx_compToZero(input1);


%stats
hx_sg = lillietest(input1); %1 means nonpara, 0 means normally distrib
hx_is = lillietest(input2);

[p_ttest_nonparaunpaired, h_ttest_nonparaunpaired] = ranksum(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[p_ttest_nonparapaired, h_ttest_nonparapaired] = signrank(input1, input2) ; %PAIRED

[p_ttest_unpaired, h_ttest_unpaired] = ttest2(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[h_ttest_paired, p_ttest_paired] = ttest(input1, input2) ; %PAIRED, normal distributions
%

xmin = -0.1;
xmax = 0.1;
n = length(input1);
x1 = xmin+rand(1,n)*(xmax-xmin);
x1 = 0;

xaxis_onPairedSG = 1:(length(input1));
xaxis_onPairedSG(:) = 1;
xaxis_onPairedSG = xaxis_onPairedSG + x1;

xaxis_onPairedIS = 1:(length(input2));
xaxis_onPairedIS(:) = 1.4;
xaxis_onPairedIS = xaxis_onPairedIS + x1;

scatter(xaxis_onPairedSG(:),input1(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)
hold on
scatter(xaxis_onPairedIS(:),input2(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on
for j = 1:length(input2)
    plot1 = plot([xaxis_onPairedSG(j) xaxis_onPairedIS(j)], [input1(j)' input2(j)'], 'Color', [.5 .5 .5], 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end

hold on
scatter(1, median(input1), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)
hold on

scatter(1.4, median(input2), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)

hold on
plot([1 1.4], [median(input1)  median(input2)], 'Color', 'k', 'LineWidth', 3);


% set(gca, 'YTick', [-1 -0.5 0 0.5 1]);
set(gca, 'XTick', [1 1.4]);

xticklabels(xTickLabels);
ylabel(yLabel); %, 'FontSize', 14);

set(gca, 'FontSize', 10, 'FontName', 'Georgia')

if hx_sg == 0 && hx_is == 0
    str = strcat({' 2tailed p = '}, num2str(p_ttest_paired));
else
    str = strcat({' 2tailed p = '}, num2str(p_ttest_nonparapaired));
end
title(strcat('GABA,',str));
titletext = strcat(SNrsubtype1, {' '}, subName1,{'; '}, epochName1, {'   vs  '}, epochName2, str);
title(titletext)

% ylim([-20 120]);
xlim([.85 1.2]);








if subplotting == 1
    subplot(1, 5, 3)
else
    figure()
end
subName1 = 'SG';
epochName1 = 'movePrep';
SNrsubtype1 = 'All neurons';
subName2 = 'IS';
epochName2 = epochName1;

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
% baselineFR1  = 0;
% baselineFR2  = 0;

meanORmedian = 'Mean_ave';

input1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
inputinfo1 = input1 - baselineFR1;

input2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
inputinfo2 = input2 - baselineFR2;

szz = 250;

input1 = inputinfo1;
input2 = inputinfo2;
xTickLabels = {'ipsi', 'contra'};
% xTickLabels = ([epochName1; epochName2]);
yLabel = 'Firing rate (Hz)';
[pvalue,paraORnonpara] = stats_subfx2tailed(input1,input2, 'paired');

[pvalueinfo1,outcomeinfo1,paraORnonparainfo1] = stats_subfx_compToZero(input1);
[pvalueinfo2,outcomeinfo2,paraORnonparainfo2] = stats_subfx_compToZero(input1);


%stats
hx_sg = lillietest(input1); %1 means nonpara, 0 means normally distrib
hx_is = lillietest(input2);

[p_ttest_nonparaunpaired, h_ttest_nonparaunpaired] = ranksum(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[p_ttest_nonparapaired, h_ttest_nonparapaired] = signrank(input1, input2) ; %PAIRED

[p_ttest_unpaired, h_ttest_unpaired] = ttest2(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[h_ttest_paired, p_ttest_paired] = ttest(input1, input2) ; %PAIRED, normal distributions
%

xmin = -0.1;
xmax = 0.1;
n = length(input1);
x1 = xmin+rand(1,n)*(xmax-xmin);
x1 = 0;

xaxis_onPairedSG = 1:(length(input1));
xaxis_onPairedSG(:) = 1;
xaxis_onPairedSG = xaxis_onPairedSG + x1;

xaxis_onPairedIS = 1:(length(input2));
xaxis_onPairedIS(:) = 1.4;
xaxis_onPairedIS = xaxis_onPairedIS + x1;

scatter(xaxis_onPairedSG(:),input1(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)
hold on
scatter(xaxis_onPairedIS(:),input2(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on
for j = 1:length(input2)
    plot1 = plot([xaxis_onPairedSG(j) xaxis_onPairedIS(j)], [input1(j)' input2(j)'], 'Color', [.5 .5 .5], 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end

hold on
scatter(1, median(input1), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)
hold on

scatter(1.4, median(input2), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)

hold on
plot([1 1.4], [median(input1)  median(input2)], 'Color', 'k', 'LineWidth', 3);


% set(gca, 'YTick', [-1 -0.5 0 0.5 1]);
set(gca, 'XTick', [1 1.4]);

xticklabels(xTickLabels);
ylabel(yLabel); %, 'FontSize', 14);

set(gca, 'FontSize', 10, 'FontName', 'Georgia')

if hx_sg == 0 && hx_is == 0
    str = strcat({' 2tailed p = '}, num2str(p_ttest_paired));
else
    str = strcat({' 2tailed p = '}, num2str(p_ttest_nonparapaired));
end
title(strcat('GABA,',str));
titletext = strcat(SNrsubtype1, {' '}, subName1,{'; '}, epochName1, {'   vs  '}, epochName2, str);
title(titletext)

% ylim([-20 120]);
xlim([.85 1.2]);












if subplotting == 1
    subplot(1, 5, 4)
else
    figure()
end
subName1 = 'SG';
epochName1 = 'moveInit';
SNrsubtype1 = 'All neurons';
subName2 = 'IS';
epochName2 = epochName1;

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
% baselineFR1  = 0;
% baselineFR2  = 0;

meanORmedian = 'Mean_ave';

input1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
inputinfo1 = input1 - baselineFR1;

input2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
inputinfo2 = input2 - baselineFR2;

szz = 250;

input1 = inputinfo1;
input2 = inputinfo2;
xTickLabels = {'ipsi', 'contra'};
% xTickLabels = ([epochName1; epochName2]);
yLabel = 'Firing rate (Hz)';
[pvalue,paraORnonpara] = stats_subfx2tailed(input1,input2, 'paired');

[pvalueinfo1,outcomeinfo1,paraORnonparainfo1] = stats_subfx_compToZero(input1);
[pvalueinfo2,outcomeinfo2,paraORnonparainfo2] = stats_subfx_compToZero(input1);


%stats
hx_sg = lillietest(input1); %1 means nonpara, 0 means normally distrib
hx_is = lillietest(input2);

[p_ttest_nonparaunpaired, h_ttest_nonparaunpaired] = ranksum(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[p_ttest_nonparapaired, h_ttest_nonparapaired] = signrank(input1, input2) ; %PAIRED

[p_ttest_unpaired, h_ttest_unpaired] = ttest2(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[h_ttest_paired, p_ttest_paired] = ttest(input1, input2) ; %PAIRED, normal distributions
%

xmin = -0.1;
xmax = 0.1;
n = length(input1);
x1 = xmin+rand(1,n)*(xmax-xmin);
x1 = 0;

xaxis_onPairedSG = 1:(length(input1));
xaxis_onPairedSG(:) = 1;
xaxis_onPairedSG = xaxis_onPairedSG + x1;

xaxis_onPairedIS = 1:(length(input2));
xaxis_onPairedIS(:) = 1.4;
xaxis_onPairedIS = xaxis_onPairedIS + x1;

scatter(xaxis_onPairedSG(:),input1(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)
hold on
scatter(xaxis_onPairedIS(:),input2(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on
for j = 1:length(input2)
    plot1 = plot([xaxis_onPairedSG(j) xaxis_onPairedIS(j)], [input1(j)' input2(j)'], 'Color', [.5 .5 .5], 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end

hold on
scatter(1, median(input1), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)
hold on

scatter(1.4, median(input2), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)

hold on
plot([1 1.4], [median(input1)  median(input2)], 'Color', 'k', 'LineWidth', 3);


% set(gca, 'YTick', [-1 -0.5 0 0.5 1]);
set(gca, 'XTick', [1 1.4]);

xticklabels(xTickLabels);
ylabel(yLabel); %, 'FontSize', 14);

set(gca, 'FontSize', 10, 'FontName', 'Georgia')

if hx_sg == 0 && hx_is == 0
    str = strcat({' 2tailed p = '}, num2str(p_ttest_paired));
else
    str = strcat({' 2tailed p = '}, num2str(p_ttest_nonparapaired));
end
title(strcat('GABA,',str));
titletext = strcat(SNrsubtype1, {' '}, subName1,{'; '}, epochName1, {'   vs  '}, epochName2, str);
title(titletext)

% ylim([-20 120]);
xlim([.85 1.2]);









if subplotting == 1
    subplot(1, 5, 5)
else
    figure()
end
subName1 = 'SG';
epochName1 = 'periReward';
SNrsubtype1 = 'All neurons';
subName2 = 'IS';
epochName2 = epochName1;

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
% baselineFR1  = 0;
% baselineFR2  = 0;

meanORmedian = 'Mean_ave';

input1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
inputinfo1 = input1 - baselineFR1;

input2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
inputinfo2 = input2 - baselineFR2;

szz = 250;

input1 = inputinfo1;
input2 = inputinfo2;
xTickLabels = {'ipsi', 'contra'};
% xTickLabels = ([epochName1; epochName2]);
yLabel = 'Firing rate (Hz)';
[pvalue,paraORnonpara] = stats_subfx2tailed(input1,input2, 'paired');

[pvalueinfo1,outcomeinfo1,paraORnonparainfo1] = stats_subfx_compToZero(input1);
[pvalueinfo2,outcomeinfo2,paraORnonparainfo2] = stats_subfx_compToZero(input1);


%stats
hx_sg = lillietest(input1); %1 means nonpara, 0 means normally distrib
hx_is = lillietest(input2);

[p_ttest_nonparaunpaired, h_ttest_nonparaunpaired] = ranksum(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[p_ttest_nonparapaired, h_ttest_nonparapaired] = signrank(input1, input2) ; %PAIRED

[p_ttest_unpaired, h_ttest_unpaired] = ttest2(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[h_ttest_paired, p_ttest_paired] = ttest(input1, input2) ; %PAIRED, normal distributions
%

xmin = -0.1;
xmax = 0.1;
n = length(input1);
x1 = xmin+rand(1,n)*(xmax-xmin);
x1 = 0;

xaxis_onPairedSG = 1:(length(input1));
xaxis_onPairedSG(:) = 1;
xaxis_onPairedSG = xaxis_onPairedSG + x1;

xaxis_onPairedIS = 1:(length(input2));
xaxis_onPairedIS(:) = 1.4;
xaxis_onPairedIS = xaxis_onPairedIS + x1;

scatter(xaxis_onPairedSG(:),input1(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)
hold on
scatter(xaxis_onPairedIS(:),input2(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on
for j = 1:length(input2)
    plot1 = plot([xaxis_onPairedSG(j) xaxis_onPairedIS(j)], [input1(j)' input2(j)'], 'Color', [.5 .5 .5], 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end

hold on
scatter(1, median(input1), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)
hold on

scatter(1.4, median(input2), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)

hold on
plot([1 1.4], [median(input1)  median(input2)], 'Color', 'k', 'LineWidth', 3);


% set(gca, 'YTick', [-1 -0.5 0 0.5 1]);
set(gca, 'XTick', [1 1.4]);

xticklabels(xTickLabels);
ylabel(yLabel); %, 'FontSize', 14);

set(gca, 'FontSize', 10, 'FontName', 'Georgia')

if hx_sg == 0 && hx_is == 0
    str = strcat({' 2tailed p = '}, num2str(p_ttest_paired));
else
    str = strcat({' 2tailed p = '}, num2str(p_ttest_nonparapaired));
end
title(strcat('GABA,',str));
titletext = strcat(SNrsubtype1, {' '}, subName1,{'; '}, epochName1, {'   vs  '}, epochName2, str);
title(titletext)

% ylim([-20 120]);
xlim([.85 1.2]);




















%%

if stopAtPubFigures == 1
    %     f = figure('Position',[500 500 400 300]);
    pause(2)
end

%7/16/20 below is example of spaghetti plot we want to use w/ ephy data
figure()
szz = 250;

input1 = inputinfo1;
input2 = inputinfo2;
xTickLabels = {'WholeTrial', 'sensoryProcessing'};
% xTickLabels = ([epochName1; epochName2]);
yLabel = 'Firing rate (Hz)';
[pvalue,paraORnonpara] = stats_subfx2tailed(input1,input2, 'paired');

[pvalueinfo1,outcomeinfo1,paraORnonparainfo1] = stats_subfx_compToZero(input1);
[pvalueinfo2,outcomeinfo2,paraORnonparainfo2] = stats_subfx_compToZero(input1);


%stats
hx_sg = lillietest(input1); %1 means nonpara, 0 means normally distrib
hx_is = lillietest(input2);

[p_ttest_nonparaunpaired, h_ttest_nonparaunpaired] = ranksum(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[p_ttest_nonparapaired, h_ttest_nonparapaired] = signrank(input1, input2) ; %PAIRED

[p_ttest_unpaired, h_ttest_unpaired] = ttest2(input1, input2) ; %'left' tests the hypothesis that x2 > x1 (UNPAIRED)
[h_ttest_paired, p_ttest_paired] = ttest(input1, input2) ; %PAIRED, normal distributions
%

xmin = -0.1;
xmax = 0.1;
n = length(input1);
x1 = xmin+rand(1,n)*(xmax-xmin);
x1 = 0;

xaxis_onPairedSG = 1:(length(input1));
xaxis_onPairedSG(:) = 1;
xaxis_onPairedSG = xaxis_onPairedSG + x1;

xaxis_onPairedIS = 1:(length(input2));
xaxis_onPairedIS(:) = 1.4;
xaxis_onPairedIS = xaxis_onPairedIS + x1;

scatter(xaxis_onPairedSG(:),input1(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)
hold on
scatter(xaxis_onPairedIS(:),input2(:), szz,  [.5 .5 .5], 'filled', 'MarkerFaceAlpha', 2/8, 'MarkerEdgeAlpha', 1)

hold on
for j = 1:length(input2)
    plot1 = plot([xaxis_onPairedSG(j) xaxis_onPairedIS(j)], [input1(j)' input2(j)'], 'Color', [.5 .5 .5], 'LineWidth', 1);
    plot1.Color(4) = 3/8;
    hold on
end

hold on
scatter(1, median(input1), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)
hold on

scatter(1.4, median(input2), szz*2,'MarkerFaceColor', 'k','MarkerEdgeColor', 'k', 'MarkerFaceAlpha',6/8)

hold on
plot([1 1.4], [median(input1)  median(input2)], 'Color', 'k', 'LineWidth', 3);


% set(gca, 'YTick', [-1 -0.5 0 0.5 1]);
set(gca, 'XTick', [1 1.4]);

xticklabels(xTickLabels);
ylabel(yLabel); %, 'FontSize', 14);

set(gca, 'FontSize', 10, 'FontName', 'Georgia')

if hx_sg == 0 && hx_is == 0
    str = strcat({' 2tailed p = '}, num2str(p_ttest_paired));
else
    str = strcat({' 2tailed p = '}, num2str(p_ttest_nonparapaired));
end
title(strcat('GABA,',str));
titletext = strcat(SNrsubtype1, {' '}, subName1,{'; '}, epochName1, {'   vs  '}, epochName2, str);
title(titletext)

ylim([-20 120]);
xlim([.95 1.1]);




if stopAtPubFigures == 1
    %     f = figure('Position',[500 500 400 300]);
    pause(2)
end







%%

figure()
% subplot(1, 2, 1)
subName1 = 'SGandIS';
epochName1 = 'wholeTrial';
SNrsubtype1 = 'All neurons';
subName2 = 'SGandIS';
epochName2 = 'priors';

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
baselineFR1  = 0;
baselineFR2  = 0;

meanORmedian = 'Median_ave';

inputinfo1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
% inputinfo1 = input1;%(logicalinput1) - baselineFR1(logicalinput1);

inputinfo2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
% inputinfo2 = input2(logicalinput2) - baselineFR2(logicalinput2);

ylabeltext = 'Firing rate (Hz)';
titletext = strcat(SNrsubtype1, {' '}, epochName1,{'; '}, subName1, {'   vs  '}, subName2);

violin_jasperfabius( 1, inputinfo1, 'withmdn', 1, 'side', 'left', 'Kernelwidth', 3, 'facecolor', [0.5 0.5 0.5])
hold on
violin_jasperfabius( 1, inputinfo2, 'withmdn', 1, 'side', 'right', 'Kernelwidth', 3, 'facecolor', [0 0 0])
ylabel(ylabeltext)
title(titletext)
%ylim([-30 30]); xlim([ 0.8 1.2]) ;
fig_name = cell2mat(titletext);
set(gcf,'NumberTitle', 'off', 'Name', fig_name);
set(gca, 'FontSize', 8, 'FontName', 'Georgia')
box('off')










figure()
% subplot(1, 2, 1)
subName1 = 'SGandIS';
epochName1 = 'wholeTrial';
SNrsubtype1 = 'All neurons';
subName2 = 'SGandIS';
epochName2 = 'sensoryProcessing';

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
baselineFR1  = 0;
baselineFR2  = 0;

meanORmedian = 'Median_ave';

inputinfo1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
% inputinfo1 = input1;%(logicalinput1) - baselineFR1(logicalinput1);

inputinfo2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
% inputinfo2 = input2(logicalinput2) - baselineFR2(logicalinput2);

ylabeltext = 'Firing rate (Hz)';
titletext = strcat(SNrsubtype1, {' '}, epochName1,{'; '}, subName1, {'   vs  '}, subName2);

violin_jasperfabius( 1, inputinfo1, 'withmdn', 1, 'side', 'left', 'Kernelwidth', 3, 'facecolor', [0.5 0.5 0.5])
hold on
violin_jasperfabius( 1, inputinfo2, 'withmdn', 1, 'side', 'right', 'Kernelwidth', 3, 'facecolor', [0 0 0])
ylabel(ylabeltext)
title(titletext)
%ylim([-30 30]); xlim([ 0.8 1.2]) ;
fig_name = cell2mat(titletext);
set(gcf,'NumberTitle', 'off', 'Name', fig_name);
set(gca, 'FontSize', 8, 'FontName', 'Georgia')
box('off')






figure()
% subplot(1, 2, 1)
subName1 = 'SGandIS';
epochName1 = 'wholeTrial';
SNrsubtype1 = 'All neurons';
subName2 = 'SGandIS';
epochName2 = 'moveInit';

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
baselineFR1  = 0;
baselineFR2  = 0;

meanORmedian = 'Median_ave';

inputinfo1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
% inputinfo1 = input1;%(logicalinput1) - baselineFR1(logicalinput1);

inputinfo2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
% inputinfo2 = input2(logicalinput2) - baselineFR2(logicalinput2);

ylabeltext = 'Firing rate (Hz)';
titletext = strcat(SNrsubtype1, {' '}, epochName1,{'; '}, subName1, {'   vs  '}, subName2);

violin_jasperfabius( 1, inputinfo1, 'withmdn', 1, 'side', 'left', 'Kernelwidth', 3, 'facecolor', [0.5 0.5 0.5])
hold on
violin_jasperfabius( 1, inputinfo2, 'withmdn', 1, 'side', 'right', 'Kernelwidth', 3, 'facecolor', [0 0 0])
ylabel(ylabeltext)
title(titletext)
%ylim([-30 30]); xlim([ 0.8 1.2]) ;
fig_name = cell2mat(titletext);
set(gcf,'NumberTitle', 'off', 'Name', fig_name);
set(gca, 'FontSize', 8, 'FontName', 'Georgia')
box('off')







figure()
% subplot(1, 2, 1)
subName1 = 'SGandIS';
epochName1 = 'wholeTrial';
SNrsubtype1 = 'All neurons';
subName2 = 'SGandIS';
epochName2 = 'movePrep';

epochName = 'movePrep';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
baselineFR1  = 0;
baselineFR2  = 0;

meanORmedian = 'Median_ave';

inputinfo1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
% inputinfo1 = input1;%(logicalinput1) - baselineFR1(logicalinput1);

inputinfo2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
% inputinfo2 = input2(logicalinput2) - baselineFR2(logicalinput2);

ylabeltext = 'Firing rate (Hz)';
titletext = strcat(SNrsubtype1, {' '}, epochName1,{'; '}, subName1, {'   vs  '}, subName2);

violin_jasperfabius( 1, inputinfo1, 'withmdn', 1, 'side', 'left', 'Kernelwidth', 3, 'facecolor', [0.5 0.5 0.5])
hold on
violin_jasperfabius( 1, inputinfo2, 'withmdn', 1, 'side', 'right', 'Kernelwidth', 3, 'facecolor', [0 0 0])
ylabel(ylabeltext)
title(titletext)
%ylim([-30 30]); xlim([ 0.8 1.2]) ;
fig_name = cell2mat(titletext);
set(gcf,'NumberTitle', 'off', 'Name', fig_name);
set(gca, 'FontSize', 8, 'FontName', 'Georgia')
box('off')








figure()
% subplot(1, 2, 1)
subName1 = 'SGandIS';
epochName1 = 'wholeTrial';
SNrsubtype1 = 'All neurons';
subName2 = 'SGandIS';
epochName2 = 'periReward';

epochName = 'wholeTrial';
baselineFR1  = (groupvar.(meanORmedian).(epochName).(subName1));
baselineFR2  = (groupvar.(meanORmedian).(epochName).(subName2));
baselineFR1  = 0;
baselineFR2  = 0;

meanORmedian = 'Median_ave';

inputinfo1  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype1);
% inputinfo1 = input1;%(logicalinput1) - baselineFR1(logicalinput1);

inputinfo2  = groupvar.(meanORmedian).(epochName2).(subName2);
% logicalinput2 = strcmp(masterspikestruct_V2.DA_or_GABA_TSNE, SNrsubtype2);
% inputinfo2 = input2(logicalinput2) - baselineFR2(logicalinput2);

ylabeltext = 'Firing rate (Hz)';
titletext = strcat(SNrsubtype1, {' '}, epochName1,{'; '}, subName1, {'   vs  '}, subName2);

violin_jasperfabius( 1, inputinfo1, 'withmdn', 1, 'side', 'left', 'Kernelwidth', 3, 'facecolor', [0.5 0.5 0.5])
hold on
violin_jasperfabius( 1, inputinfo2, 'withmdn', 1, 'side', 'right', 'Kernelwidth', 3, 'facecolor', [0 0 0])
ylabel(ylabeltext)
title(titletext)
%ylim([-30 30]); xlim([ 0.8 1.2]) ;
fig_name = cell2mat(titletext);
set(gcf,'NumberTitle', 'off', 'Name', fig_name);
set(gca, 'FontSize', 8, 'FontName', 'Georgia')
box('off')







% 6/9/20

% 
% %how do we pull out trials that are SG contra/ipsi and those that are IS
% %contra/ipsi
% 
% masterspikestruct_V2.FRstruct.case01_spike1_clust1.wholeTrial.SG
% 
% theValue = cell2mat(masterspikestruct_V2.FRstruct.case01_spike1_clust1.wholeTrial.SG(1));
% 
% YouripsiArray = cell2mat(masterspikestruct_V2.FRstruct.case01_spike1_clust1.wholeTrial.ipsi);
% YourcontraArray = cell2mat(masterspikestruct_V2.FRstruct.case01_spike1_clust1.wholeTrial.contra);
% 
% theValue =
% 
% ismember(theValue, YourArray(:))

%%

figuresdir = fullfile('/Users','andytek','Box','Auditory_task_SNr','Data','generated_analyses','epochs_FR_analysis');
filename2 = ('/masterspikestruct_V2');
load(fullfile(figuresdir, filename2), 'masterspikestruct_V2');
subName2_index = {'wholeTrial';'priors';'sensoryProcessing';'movePrep';'moveInit'; 'periReward'};
subName2_index = {'sensoryProcessing'};

for i = 1:length(masterspikestruct_V2.clustfileIndex)
    
    structLabel = masterspikestruct_V2.clustfileIndex{i};
    
    for k = 1:length(subName2_index)
        subName2 = subName2_index{k};
        
        SGipsi_i = 1;
        SGcontra_i = 1;
        ISipsi_i = 1;
        IScontra_i = 1;
        
        YouripsiArray = cell2mat(masterspikestruct_V2.FRstruct.(structLabel).(subName2).ipsi);
        YourcontraArray = cell2mat(masterspikestruct_V2.FRstruct.(structLabel).(subName2).contra);
        
        %         if strcmp(masterspikestruct_V2.surgerySide_LorR{i}, 'R')
        for m = 1:length(cell2mat(masterspikestruct_V2.FRstruct.(structLabel).(subName2).SG))
            
            theValue = cell2mat(masterspikestruct_V2.FRstruct.(structLabel).(subName2).SG(m));
            
            
            if ismember(theValue, YouripsiArray(:))
                [lia,locb] = ismember(theValue, YouripsiArray(:));
                YouripsiArray(locb) = NaN;
                masterspikestruct_V2.FRstruct.(structLabel).(subName2).SGipsi(SGipsi_i) = theValue;
                SGipsi_i = SGipsi_i+1;
            elseif ismember(theValue, YourcontraArray(:))
                [lia,locb] = ismember(theValue, YourcontraArray(:));
                YourcontraArray(locb) = NaN;
                masterspikestruct_V2.FRstruct.(structLabel).(subName2).SGcontra(SGcontra_i) = theValue;
                SGcontra_i = SGcontra_i+1;
            end
        end
        
        
        
        for m = 1:length(cell2mat(masterspikestruct_V2.FRstruct.(structLabel).(subName2).IS))
            
            theValue = cell2mat(masterspikestruct_V2.FRstruct.(structLabel).(subName2).IS(m));
            
            YouripsiArray = cell2mat(masterspikestruct_V2.FRstruct.(structLabel).(subName2).ipsi);
            YourcontraArray = cell2mat(masterspikestruct_V2.FRstruct.(structLabel).(subName2).contra);
            
            if ismember(theValue, YouripsiArray(:))
                masterspikestruct_V2.FRstruct.(structLabel).(subName2).ISipsi(ISipsi_i) = theValue;
                ISipsi_i = ISipsi_i+1;
            elseif ismember(theValue, YourcontraArray(:))
                masterspikestruct_V2.FRstruct.(structLabel).(subName2).IScontra(IScontra_i) = theValue;
                IScontra_i = IScontra_i+1;
            end
        end
        
        
        
    end
end


            
% 
%             masterspikestruct_V2.FRstruct.(structLabel).(subName2).ipsi = masterspikestruct_V2.FRstruct.(structLabel).(subName2).R;
%             masterspikestruct_V2.FRstruct.(structLabel).(subName2).contra = masterspikestruct_V2.FRstruct.(structLabel).(subName2).L;
%             
%             masterspikestruct_V2.Median_ave.(structLabel).(subName2).ipsi = masterspikestruct_V2.Median_ave.(structLabel).(subName2).R;
%             masterspikestruct_V2.Median_ave.(structLabel).(subName2).contra = masterspikestruct_V2.Median_ave.(structLabel).(subName2).L;
%             
%             masterspikestruct_V2.Mean_ave.(structLabel).(subName2).ipsi = masterspikestruct_V2.Mean_ave.(structLabel).(subName2).R;
%             masterspikestruct_V2.Mean_ave.(structLabel).(subName2).contra = masterspikestruct_V2.Mean_ave.(structLabel).(subName2).L;
%             
%             
%             
%         elseif strcmp(masterspikestruct_V2.surgerySide_LorR{i}, 'L')
%             
%             masterspikestruct_V2.FRstruct.(structLabel).(subName2).ipsi = masterspikestruct_V2.FRstruct.(structLabel).(subName2).L;
%             masterspikestruct_V2.FRstruct.(structLabel).(subName2).contra = masterspikestruct_V2.FRstruct.(structLabel).(subName2).R;
%             
%             masterspikestruct_V2.Median_ave.(structLabel).(subName2).ipsi = masterspikestruct_V2.Median_ave.(structLabel).(subName2).L;
%             masterspikestruct_V2.Median_ave.(structLabel).(subName2).contra = masterspikestruct_V2.Median_ave.(structLabel).(subName2).R;
%             
%             masterspikestruct_V2.Mean_ave.(structLabel).(subName2).ipsi = masterspikestruct_V2.Mean_ave.(structLabel).(subName2).L;
%             masterspikestruct_V2.Mean_ave.(structLabel).(subName2).contra = masterspikestruct_V2.Mean_ave.(structLabel).(subName2).R;
%             
%         end
%         
%     end
%     
%     
% end







%% need to include some pref calculations for the reformatting spike info that is in the tsne code.

num_iter = 500;
analysis_to_perform = 'leftchoice_vs_rightchoice';
if caseNumb == 1 || caseNumb == 2 || caseNumb == 3
    epochs = {[2 3];[2 4];[2 5]; [888 -1 2 888 0.1 2 ];[888 -0.1 5 999 1 5]};
else
    epochs = {[2 3];[2 4];[2 5]; [888 -1 2 888 0.1 2 ];[888 -0.1 5 999 1 5];[2 7];[4 7];[888 -0.1 7 999 1 7];};
end


raster_info = IS_raster_info;
%4/1/20; AT note - %%[888 -0.5 3 888 -0.25 3] - Between 0.5 and 0.25 seconds before event 3
%input used for hemiPD: {[1 2]; [8 3]; [888 0 3 999 3 .250]; [999 3 0.250 999 4 0]; [3 4];}
[IS_preference, IS_roc_p, IS_activity_info] = CellPreference_io_V1(raster_info, num_iter, analysis_to_perform, epochs);


%the key input is below, first is a column vector for 'L', second is for
%'R', third is number of iterations
num_iter = 200;

input1 = 0
input2 = 0
[pref, rp] = ROC_preference(L_spikes', R_spikes', num_iter); % Calls new ROC function



%%









% %
% for i = 1:length(masterspikestruct_V2.clustfileIndex)
%     if strcmp(masterspikestruct_V2.DA_or_GABA_TSNE{i}, 'GABA')  
%     masterspikestruct_V2.DA_or_GABA_TSNE{i} = 'DANn'
%     elseif strcmp(masterspikestruct_V2.DA_or_GABA_TSNE{i}, 'DANn')  
%     masterspikestruct_V2.DA_or_GABA_TSNE{i} = 'GABA'
%     end
%     
%     
% end





figuresdir = fullfile('/Users','andytek','Box','Auditory_task_SNr','Data','generated_analyses','epochs_FR_analysis');
filename2 = ('/masterspikestruct_V2');
load(fullfile(figuresdir, filename2), 'masterspikestruct_V2');
subName2_index = {'wholeTrial';'priors';'sensoryProcessing';'movePrep';'moveInit'; 'periReward'};

for i = 1:length(masterspikestruct_V2.clustfileIndex)
    
    structLabel = masterspikestruct_V2.clustfileIndex{i};
    
    for k = 1:length(subName2_index)
        subName2 = subName2_index{k};
        
        if strcmp(masterspikestruct_V2.surgerySide_LorR{i}, 'R')
            
            masterspikestruct_V2.FRstruct.(structLabel).(subName2).ipsi = masterspikestruct_V2.FRstruct.(structLabel).(subName2).R;
            masterspikestruct_V2.FRstruct.(structLabel).(subName2).contra = masterspikestruct_V2.FRstruct.(structLabel).(subName2).L;
            
            masterspikestruct_V2.Median_ave.(structLabel).(subName2).ipsi = masterspikestruct_V2.Median_ave.(structLabel).(subName2).R;
            masterspikestruct_V2.Median_ave.(structLabel).(subName2).contra = masterspikestruct_V2.Median_ave.(structLabel).(subName2).L;
            
            masterspikestruct_V2.Mean_ave.(structLabel).(subName2).ipsi = masterspikestruct_V2.Mean_ave.(structLabel).(subName2).R;
            masterspikestruct_V2.Mean_ave.(structLabel).(subName2).contra = masterspikestruct_V2.Mean_ave.(structLabel).(subName2).L;
            
            
            
        elseif strcmp(masterspikestruct_V2.surgerySide_LorR{i}, 'L')
            
            masterspikestruct_V2.FRstruct.(structLabel).(subName2).ipsi = masterspikestruct_V2.FRstruct.(structLabel).(subName2).L;
            masterspikestruct_V2.FRstruct.(structLabel).(subName2).contra = masterspikestruct_V2.FRstruct.(structLabel).(subName2).R;
            
            masterspikestruct_V2.Median_ave.(structLabel).(subName2).ipsi = masterspikestruct_V2.Median_ave.(structLabel).(subName2).L;
            masterspikestruct_V2.Median_ave.(structLabel).(subName2).contra = masterspikestruct_V2.Median_ave.(structLabel).(subName2).R;
            
            masterspikestruct_V2.Mean_ave.(structLabel).(subName2).ipsi = masterspikestruct_V2.Mean_ave.(structLabel).(subName2).L;
            masterspikestruct_V2.Mean_ave.(structLabel).(subName2).contra = masterspikestruct_V2.Mean_ave.(structLabel).(subName2).R;
            
        end
        
    end
    
    
end



    
a = 2;
    

%%

% below generate the structs we need 
casen = 1;
spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 1,1, 'R')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 2,1, 'R')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 1,1, 'R')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 2,1, 'R')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 3,1, 'R')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 1,1, 'R')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 2,1, 'R')
close all
casen = 2;
spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 2,1, 'R')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 1,1, 'R')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 3,1, 'R')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 2,1, 'R')
close all

casen = 3;
spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 1,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 2,1, 'L')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 1,1, 'L')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 2,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 3,1, 'L')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 1,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 2,1, 'L')
close all

casen = 4;
spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 1,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 2,1, 'L')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 1,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 2,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 3,1, 'L')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 1,1, 'L')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 2,1, 'L')
close all

casen = 5;
spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 3,1, 'R')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 3,1, 'R')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 3,1, 'R')

close all
casen = 6;
spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 3,1, 'R')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 3,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 3,1, 'R')

close all
casen = 7;
spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 3,1, 'R')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 3,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 3,1, 'R')

close all
casen = 8;
spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 3,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 3,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 3,1, 'R')
close all

casen = 9;
spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 3,1, 'R')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 3,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 3,1, 'R')

close all
casen = 10;
spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 3,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 3,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 1,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 2,1, 'R')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 3,1, 'R')

close all

casen = 11;
spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 1,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 2,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 3,1, 'L')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 1,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 2,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 3,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 1,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 2,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 3,1, 'L')

close all
casen = 12;
spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 1,1, 'L')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 2,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 3,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 1,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 2,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 3,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 1,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 2,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 3,1, 'L')
close all

casen = 13;
spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 1,1, 'L')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 2,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike1', 3,1, 'L')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 1,1, 'L')
spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 2,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike2', 3,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 1,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 2,1, 'L')
% spiketrainexaction_AnalysisStruct_V6(casen, 'spike3', 3,1, 'L')



%%

casen = 1;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
close all
casen = 2;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
close all

casen = 3;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
close all

casen = 4;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
close all

casen = 5;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 3,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 3,1)

close all
casen = 6;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 3,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 3,1)

close all
casen = 7;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 3,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 3,1)

close all
casen = 8;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 3,1)
close all

casen = 9;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 3,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 3,1)

close all
casen = 10;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 3,1)

close all

casen = 11;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 3,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 3,1)

close all
casen = 12;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 3,1)
close all

casen = 13;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 3,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 3,1)


%%
casen = 1;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
close all
casen = 2;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
close all

casen = 3;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
close all

casen = 4;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
close all

casen = 5;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 3,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 3,1)

close all
casen = 6;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 3,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 3,1)

close all
casen = 7;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 3,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 3,1)

close all
casen = 8;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 3,1)
close all

casen = 9;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 3,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 3,1)

close all
casen = 10;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 3,1)

close all

casen = 11;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 3,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 3,1)

close all
casen = 12;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 3,1)
close all

casen = 13;
FRanalysis_helperfx_V2(casen, 'spike1', 1,1)
FRanalysis_helperfx_V2(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike1', 3,1)
FRanalysis_helperfx_V2(casen, 'spike2', 1,1)
FRanalysis_helperfx_V2(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V2(casen, 'spike3', 3,1)


%%

meanORmedian = 'Mean_ave';

input1Mean  = (groupvar.(meanORmedian).(epochName1).(subName1));
% logicalinput1 = strcmp(masterspikestruct.anatomLocation, SNrsubtype1);
% inputinfo1 = input1(logicalinput1) - baselineFR1(logicalinput1); 
inputinfo1 = input1 - baselineFR1; 

input2Mean  = groupvar.(meanORmedian).(epochName2).(subName2);

%%






%%
casen = 1;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
close all
casen = 2;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
close all

casen = 3;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
close all

casen = 4;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
close all

casen = 5;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 3,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 3,1)

close all
casen = 6;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 3,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 3,1)

close all
casen = 7;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 3,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 3,1)

close all
casen = 8;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 3,1)
close all

casen = 9;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 3,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 3,1)

close all
casen = 10;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 3,1)

close all

casen = 11;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 3,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 3,1)

close all
casen = 12;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 3,1)
close all

casen = 13;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 3,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 3,1)






% below generate the structs JT wanted
casen = 1;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
close all
casen = 2;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
close all

casen = 3;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
close all

casen = 4;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
close all

casen = 5;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 3,1)

close all
casen = 6;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 3,1)

close all
casen = 7;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 3,1)

close all
casen = 8;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 3,1)
close all

casen = 9;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 3,1)

close all
casen = 10;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 3,1)

close all

casen = 11;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 3,1)

close all
casen = 12;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 3,1)
close all

casen = 13;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 3,1)





% clustfileIndex = {'case01_spike1_clust1';
% 'case01_spike1_clust2';
% 'case01_spike2_clust1';
% 'case01_spike2_clust2';
% 'case01_spike2_clust3';
% 'case01_spike3_clust1';
% 'case01_spike3_clust2';
% 'case02_spike1_clust1';
% 'case02_spike2_clust1';
% 'case02_spike2_clust2';
% 'case02_spike3_clust1';
% 'case03_spike1_clust1';
% 'case03_spike2_clust1';
% 'case03_spike2_clust2';
% 'case03_spike3_clust1';
% 'case04_spike1_clust1';
% 'case04_spike2_clust1';
% 'case04_spike3_clust1';
% 'case04_spike3_clust2';
% 'case05_spike1_clust1';
% 'case05_spike2_clust1';
% 'case05_spike3_clust1';
% 'case06_spike1_clust1';
% 'case06_spike2_clust1';
% 'case07_spike1_clust1';
% 'case07_spike2_clust1';
% 'case08_spike1_clust1';
% 'case09_spike1_clust1';
% 'case09_spike2_clust1';
% 'case10_spike1_clust1';
% 'case11_spike1_clust1';
% 'case11_spike2_clust1';
% 'case12_spike1_clust1';
% 'case12_spike1_clust2';
% 'case13_spike1_clust1';
% 'case13_spike1_clust2';
% 'case13_spike2_clust1';
% 'case13_spike2_clust2'};
%%


casen = 1;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
close all
casen = 2;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
close all

casen = 3;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
close all

casen = 4;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
close all

casen = 5;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 3,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 3,1)

close all
casen = 6;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 3,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 3,1)

close all
casen = 7;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 3,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 3,1)

close all
casen = 8;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 3,1)
close all

casen = 9;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 3,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 3,1)

close all
casen = 10;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 3,1)

close all

casen = 11;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 3,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 3,1)

close all
casen = 12;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 3,1)
close all

casen = 13;
FRanalysis_helperfx_V1(casen, 'spike1', 1,1)
FRanalysis_helperfx_V1(casen, 'spike1', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike1', 3,1)
FRanalysis_helperfx_V1(casen, 'spike2', 1,1)
FRanalysis_helperfx_V1(casen, 'spike2', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike2', 3,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 1,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 2,1)
% FRanalysis_helperfx_V1(casen, 'spike3', 3,1)






% below generate the structs JT wanted
casen = 1;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
close all
casen = 2;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
close all

casen = 3;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
close all

casen = 4;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
close all

casen = 5;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 3,1)

close all
casen = 6;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 3,1)

close all
casen = 7;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 3,1)

close all
casen = 8;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 3,1)
close all

casen = 9;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 3,1)

close all
casen = 10;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 3,1)

close all

casen = 11;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 3,1)

close all
casen = 12;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 3,1)
close all

casen = 13;
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 1,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike1', 3,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 1,1)
spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike2', 3,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 1,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 2,1)
% spiketrainexaction_AnalysisStruct_V3(casen, 'spike3', 3,1)

%%
CDIG_IN_1_Up_1;
CDIG_IN_1_Up_2;

TTLdata = CDIG_IN_1_Up_1; %.ttl_dn is just 2200 samples after this, otherwise same
TTLdata = CDIG_IN_1_Up_adjusted;

waitperiod_index = zeros(2,length(TTLdata));
stopgap = 11; %this is needed because we are 'looking' for the LAST TTL of the 11 train TTL that indicates a successful completion of the wait period
fromwhere_relativetoendofwaitperiod = -17;
for i = stopgap:(length(TTLdata)-1)
    if TTLdata(i+1) - TTLdata(i) < 400 && TTLdata(i) - TTLdata(i-10) < (14000) %(14000+11670)
        waitperiod_index(1,i) = 1;
        waitperiod_index(2,i) = TTLdata(i+fromwhere_relativetoendofwaitperiod);
    end
end


% little aside here to make the waitperiod_index more scannable by eye
waitperiod_index_easilyscannable = [];
for i = 1:length(waitperiod_index)
    if waitperiod_index(1,i) == 1
        appendme = waitperiod_index(2,i);
        waitperiod_index_easilyscannable = [waitperiod_index_easilyscannable appendme];
    end
end %this serves its purposes, generates exact TTL ID's for what we're calling successful wait periods







fromwhere_relativetoendofwaitperiod= -17;
TTLdata = CDIG_IN_1_Up_2; %.ttl_dn is just 2200 samples after this, otherwise same
waitperiod_index = zeros(2,length(TTLdata));
stopgap = 11; %this is needed because we are 'looking' for the LAST TTL of the 11 train TTL that indicates a successful completion of the wait period
for i = stopgap:(length(TTLdata)-1)
    if TTLdata(i+1) - TTLdata(i) < 400 && TTLdata(i) - TTLdata(i-10) < (14000) %(14000+11670)
        waitperiod_index(1,i) = 1;
        waitperiod_index(2,i) = TTLdata(i+fromwhere_relativetoendofwaitperiod);
    end
end


% little aside here to make the waitperiod_index more scannable by eye
waitperiod_index_easilyscannable = [];
for i = 1:length(waitperiod_index)
    if waitperiod_index(1,i) == 1
        appendme = waitperiod_index(2,i);
        waitperiod_index_easilyscannable_1 = [waitperiod_index_easilyscannable appendme];
    end
end %this serves its purposes, generates exact TTL ID's for what we're calling successful wait periods





%%
% 3/30/20; so I want to generate the analogous 'raster_info' input to
% CellPref. 

%To generate the appropriate input. 

%below should be the 'ref_spike_times'
raster_info_io.ref_spike_times.L{1, 1:5}
raster_info_io.ref_spike_times.R{1, 1:5}

%below should be the 'trial_inds'
raster_info_io.trial_inds.L{1, 1:5} 
raster_info_io.trial_inds.R{1, 1:5}


%below should be the 'trialStart_times'
raster_info_io.raster_events.L.trial_start{1, 5}
raster_info_io.raster_events.R.trial_start{1, 5}  

%below are the event times, which will be represented in a matrix, within
%the 1, 1:5 subfield of trial_events_time. Each event will be its own row,
%with each column being a given trial
raster_info_io.raster_events.L.trial_events_time{1, 5}  
raster_info_io.raster_events.R.trial_events_time{1, 5}  

%below are the stim parameters
raster_info_io.stim_params.odor_names = []; %contains the odor mixture as '95' '-95' '50'
raster_info_io.stim_params.reward_side = [];  %corresponding rewarded side to the info in above

%
raster_info_io.align_ind   %in hemiPD is an integer, we prob want it to be 4 for go cue or something

raster_info_io.window  %time window











%% Look at R, choice (active decision making) trials %%%
% aka L choices made during SG
trial_inds = find((taskbase_io.response == 1) & (choice_trials == 2));
trial_start_times = taskbase_io.events.trialStart(trial_inds)';
% trial_start_times_AO = taskbase_io.trialStart_AO(trial_inds)';


trialStart_times = (taskbase_io.trialStart_AO(trial_inds)')/(Ephys_struct.mer.sampFreqHz);
upPressed_times = taskbase_io.events.upPressed(trial_inds)';
stimDelivered_times = taskbase_io.events.stimDelivered(trial_inds)';
goCue_times = taskbase_io.events.goCue(trial_inds)';
leftUP_times = taskbase_io.events.leftUP(trial_inds)';
submitsResponse_times = taskbase_io.events.submitsResponse(trial_inds)';
feedback_times = taskbase_io.events.feedback(trial_inds)';



% % % % opi_times = taskbase.OdorPokeIn(trial_inds)';
% % % % ovo_times = taskbase.DIO(trial_inds)';
% % % % gt_times = taskbase.cue(trial_inds)';
% % % % opo_times = taskbase.OdorPokeOut(trial_inds)';
% % % % wpi_times = taskbase.WaterPokeIn(trial_inds)';
% % % % wvo_times = taskbase.WaterDeliv(trial_inds)';

%% only plot a certain number of trials in the raster (but psth should be
%% average of all trials)
if length(trial_start_times) > NUM_TRIALS_TO_PLOT
    r = randperm(length(trial_start_times));
    trials_to_plot = sort(r(1:NUM_TRIALS_TO_PLOT));
else
    trials_to_plot = 1:length(trial_start_times);
end

trialStart_times = trialStart_times(trials_to_plot);
upPressed_times = upPressed_times(trials_to_plot);
stimDelivered_times = stimDelivered_times(trials_to_plot);
goCue_times = goCue_times(trials_to_plot);
leftUP_times = leftUP_times(trials_to_plot);
submitsResponse_times = submitsResponse_times(trials_to_plot);
feedback_times = feedback_times(trials_to_plot);


% sort trials by rxn
[y, trials_to_plot] = sort(submitsResponse_times - stimDelivered_times);

trialStart_times = trialStart_times(trials_to_plot);
upPressed_times = upPressed_times(trials_to_plot);
stimDelivered_times = stimDelivered_times(trials_to_plot);
goCue_times = goCue_times(trials_to_plot);
leftUP_times = leftUP_times(trials_to_plot);
submitsResponse_times = submitsResponse_times(trials_to_plot);
feedback_times = feedback_times(trials_to_plot);

%% plot rasters aligned to first desired event
ax_R_choice_event1_l = ax_L_choice_event1_l;
ax_R_choice_event1_w = ax_L_choice_event1_w;
num_trials = NUM_TRIALS_TO_PLOT;
% num_trials = 107;
ax_R_choice_event1_h = (num_trials / length(taskbase_io.events.trialStart)) * available_rasters_h;
ax_R_choice_event1_u = ax_L_nochoice_event1_u - inter_raster_space - ax_L_choice_event1_h;


dimension_R = ax_L_choice_event1_pos(2) - ax_L_choice_event1_h;
ax_R_choice_event1_pos = [ax_R_choice_event1_l dimension_R ax_R_choice_event1_w ax_L_choice_event1_h];


h = axes('Position', ax_R_choice_event1_pos);

hold on;

% spike_times;%in seconds already
% trial_start_times; %in seconds already

[ref_spike_times, trial_inds, plot_handle] = raster_io_V1(spike_times, trialStart_times',...
    eval(align_event1_times), window_event1,...
    [upPressed_times; stimDelivered_times; goCue_times; leftUP_times; submitsResponse_times; feedback_times]);

%     [opi_times; ovo_times; gt_times; opo_times; wpi_times]
%     [ ovo_times; gt_times; opo_times])

% Change colors of secondary event symbols
% set(plot_handle.secondary_events(:, 1), 'Color', odorvalveon_col);
% set(plot_handle.secondary_events(:, 2), 'Color', gotone_col);
% set(plot_handle.secondary_events(:, 3), 'Color', odorportout_col);

set(plot_handle.secondary_events(:, 1), 'Color', upPressed_color);
set(plot_handle.secondary_events(:, 2), 'Color', stimDelivered_color);
set(plot_handle.secondary_events(:, 3), 'Color', goCue_color);
set(plot_handle.secondary_events(:, 4), 'Color', leftUP_color);
set(plot_handle.secondary_events(:, 5), 'Color', submitsResponse_color);
set(plot_handle.secondary_events(:, 6), 'Color', feedback_color);

set(gca, 'xticklabel', []);
set(gca, 'ytick', []);
ylabel({'Contra.'});
%title('Stimulus guided');

% recalculate raster, w/ all 'well-behaved' trials included, for psth - aligned to odorportout
% % % % trial_inds = find((taskbase.choice == 1) & (choice_trials == 1));
% % % % trial_start_times = taskbase.start_nlx(trial_inds)';
% % % % opi_times = taskbase.OdorPokeIn(trial_inds)';
% % % % ovo_times = taskbase.DIO(trial_inds)';
% % % % gt_times = taskbase.cue(trial_inds)';
% % % % opo_times = taskbase.OdorPokeOut(trial_inds)';
% % % % wpi_times = taskbase.WaterPokeIn(trial_inds)';
% % % % wvo_times = taskbase.WaterDeliv(trial_inds)';

trial_inds = find((taskbase_io.response == 1) & (choice_trials == 2));
trial_start_times = taskbase_io.events.trialStart(trial_inds)';
% trial_start_times_AO = taskbase_io.trialStart_AO(trial_inds)';
trialStart_times = (taskbase_io.trialStart_AO(trial_inds)')/(Ephys_struct.mer.sampFreqHz);
upPressed_times = taskbase_io.events.upPressed(trial_inds)';
stimDelivered_times = taskbase_io.events.stimDelivered(trial_inds)';
goCue_times = taskbase_io.events.goCue(trial_inds)';
leftUP_times = taskbase_io.events.leftUP(trial_inds)';
submitsResponse_times = taskbase_io.events.submitsResponse(trial_inds)';
feedback_times = taskbase_io.events.feedback(trial_inds)';





[ref_spike_times, trial_inds, plot_handle] = raster(spike_times, trial_start_times',...
    eval(align_event1_times), window_event1,...
    [ stimDelivered_times; goCue_times; leftUP_times], no_plot_flag);

%     [opi_times; ovo_times; gt_times; opo_times; wpi_times], no_plot_flag);


%AT 2/17/20; editting below
% now calculate psth
% now calculate psth
[ref_psth.R.choice.event1, junk, ref_psth_info.R.choice.event1] =...
    psth(ref_spike_times, trial_inds, init_psth_window_event1, PSTH_SMOOTH_FACTOR, no_plot_flag);


%% Look at R, no-choice trials %%%
% aka R choices made during IS
trial_inds = find((taskbase_io.response == 2) & (nochoice_trials_R == 1));
trial_start_times = taskbase_io.events.trialStart(trial_inds)';
% trial_start_times_AO = taskbase_io.trialStart_AO(trial_inds)';


trialStart_times = (taskbase_io.trialStart_AO(trial_inds)')/(Ephys_struct.mer.sampFreqHz);
upPressed_times = taskbase_io.events.upPressed(trial_inds)';
stimDelivered_times = taskbase_io.events.stimDelivered(trial_inds)';
goCue_times = taskbase_io.events.goCue(trial_inds)';
leftUP_times = taskbase_io.events.leftUP(trial_inds)';
submitsResponse_times = taskbase_io.events.submitsResponse(trial_inds)';
feedback_times = taskbase_io.events.feedback(trial_inds)';



% % % % opi_times = taskbase.OdorPokeIn(trial_inds)';
% % % % ovo_times = taskbase.DIO(trial_inds)';
% % % % gt_times = taskbase.cue(trial_inds)';
% % % % opo_times = taskbase.OdorPokeOut(trial_inds)';
% % % % wpi_times = taskbase.WaterPokeIn(trial_inds)';
% % % % wvo_times = taskbase.WaterDeliv(trial_inds)';

%% only plot a certain number of trials in the raster (but psth should be
%% average of all trials)
if length(trial_start_times) > NUM_TRIALS_TO_PLOT
    r = randperm(length(trial_start_times));
    trials_to_plot = sort(r(1:NUM_TRIALS_TO_PLOT));
else
    trials_to_plot = 1:length(trial_start_times);
end

trialStart_times = trialStart_times(trials_to_plot);
upPressed_times = upPressed_times(trials_to_plot);
stimDelivered_times = stimDelivered_times(trials_to_plot);
goCue_times = goCue_times(trials_to_plot);
leftUP_times = leftUP_times(trials_to_plot);
submitsResponse_times = submitsResponse_times(trials_to_plot);
feedback_times = feedback_times(trials_to_plot);


% sort trials by rxn
[y, trials_to_plot] = sort(submitsResponse_times - stimDelivered_times);

trialStart_times = trialStart_times(trials_to_plot);
upPressed_times = upPressed_times(trials_to_plot);
stimDelivered_times = stimDelivered_times(trials_to_plot);
goCue_times = goCue_times(trials_to_plot);
leftUP_times = leftUP_times(trials_to_plot);
submitsResponse_times = submitsResponse_times(trials_to_plot);
feedback_times = feedback_times(trials_to_plot);

%% plot rasters aligned to first desired event


ax_R_nochoice_event1_l = ax_L_choice_event1_l + 0.25;
ax_R_nochoice_event1_w = ax_L_choice_event1_w;
num_trials = NUM_TRIALS_TO_PLOT;
% num_trials = 107; AT 2/13/19 editted out
ax_R_nochoice_event1_h = (num_trials / length(taskbase_io.events.trialStart)) * available_rasters_h;
ax_R_nochoice_event1_u = ax_R_choice_event1_u - inter_raster_space - ax_R_nochoice_event1_h;

% ax_R_nochoice_event1_pos = [ax_R_nochoice_event1_l ax_R_choice_event1_u ax_R_nochoice_event1_w ax_R_nochoice_event1_h];
ax_R_nochoice_event1_pos = [ax_R_nochoice_event1_l dimension_R ax_R_nochoice_event1_w ax_R_nochoice_event1_h]; %2/13/19 AT editted from '0.655' to 'dimension_R'

h = axes('Position', ax_R_nochoice_event1_pos);



hold on;

% spike_times;%in seconds already
% trial_start_times; %in seconds already

[ref_spike_times, trial_inds, plot_handle] = raster_io_V1(spike_times, trialStart_times',...
    eval(align_event1_times), window_event1,...
    [upPressed_times; stimDelivered_times; goCue_times; leftUP_times; submitsResponse_times; feedback_times]);

%     [opi_times; ovo_times; gt_times; opo_times; wpi_times]
%     [ ovo_times; gt_times; opo_times])

% Change colors of secondary event symbols
% set(plot_handle.secondary_events(:, 1), 'Color', odorvalveon_col);
% set(plot_handle.secondary_events(:, 2), 'Color', gotone_col);
% set(plot_handle.secondary_events(:, 3), 'Color', odorportout_col);

set(plot_handle.secondary_events(:, 1), 'Color', upPressed_color);
set(plot_handle.secondary_events(:, 2), 'Color', stimDelivered_color);
set(plot_handle.secondary_events(:, 3), 'Color', goCue_color);
set(plot_handle.secondary_events(:, 4), 'Color', leftUP_color);
set(plot_handle.secondary_events(:, 5), 'Color', submitsResponse_color);
set(plot_handle.secondary_events(:, 6), 'Color', feedback_color);

set(gca, 'xticklabel', []);
set(gca, 'ytick', []);
%ylabel({'Ipsi.'});
%title('Internally specified');

% recalculate raster, w/ all 'well-behaved' trials included, for psth - aligned to odorportout
% % % % trial_inds = find((taskbase.choice == 1) & (choice_trials == 1));
% % % % trial_start_times = taskbase.start_nlx(trial_inds)';
% % % % opi_times = taskbase.OdorPokeIn(trial_inds)';
% % % % ovo_times = taskbase.DIO(trial_inds)';
% % % % gt_times = taskbase.cue(trial_inds)';
% % % % opo_times = taskbase.OdorPokeOut(trial_inds)';
% % % % wpi_times = taskbase.WaterPokeIn(trial_inds)';
% % % % wvo_times = taskbase.WaterDeliv(trial_inds)';

trial_inds = find((taskbase_io.response == 2) & (nochoice_trials_R == 1));
trial_start_times = taskbase_io.events.trialStart(trial_inds)';
% trial_start_times_AO = taskbase_io.trialStart_AO(trial_inds)';
trialStart_times = (taskbase_io.trialStart_AO(trial_inds)')/(Ephys_struct.mer.sampFreqHz);
upPressed_times = taskbase_io.events.upPressed(trial_inds)';
stimDelivered_times = taskbase_io.events.stimDelivered(trial_inds)';
goCue_times = taskbase_io.events.goCue(trial_inds)';
leftUP_times = taskbase_io.events.leftUP(trial_inds)';
submitsResponse_times = taskbase_io.events.submitsResponse(trial_inds)';
feedback_times = taskbase_io.events.feedback(trial_inds)';





[ref_spike_times, trial_inds, plot_handle] = raster(spike_times, trial_start_times',...
    eval(align_event1_times), window_event1,...
    [ stimDelivered_times; goCue_times; leftUP_times], no_plot_flag);

%     [opi_times; ovo_times; gt_times; opo_times; wpi_times], no_plot_flag);


% now calculate psth
[ref_psth.R.nochoice.event1, junk, ref_psth_info.R.nochoice.event1] =...
    psth(ref_spike_times, trial_inds, init_psth_window_event1, PSTH_SMOOTH_FACTOR, no_plot_flag);










%%
%%

fs = 44000;
for i = 1:97
    
test(i,1) = taskbase_io.trialStart_AO(i)/fs;
test(i,2) =taskbase_io.trialStart(i);

end
